{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nimport { config } from '../config';\n\n// Verificar si la configuración de Supabase está completa\nif (!config.isSupabaseConfigured) {\n  console.error('Error: La configuración de Supabase no está completa.');\n  throw new Error('Por favor, configura las variables de entorno de Supabase en el archivo .env');\n}\nconst supabase = createClient(config.supabaseUrl, config.supabaseKey);\nexport const authService = {\n  async login(email, password) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async register(email, password, fullName, role) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            full_name: fullName,\n            role: role\n          }\n        }\n      });\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async logout() {\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async getCurrentUser() {\n    try {\n      const {\n        data: {\n          user\n        },\n        error\n      } = await supabase.auth.getUser();\n      if (error) throw error;\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async resetPassword(email) {\n    try {\n      const {\n        error\n      } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`\n      });\n      if (error) throw error;\n    } catch (error) {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["createClient","config","isSupabaseConfigured","console","error","Error","supabase","supabaseUrl","supabaseKey","authService","login","email","password","data","auth","signInWithPassword","register","fullName","role","signUp","options","full_name","logout","signOut","getCurrentUser","user","getUser","resetPassword","resetPasswordForEmail","redirectTo","window","location","origin"],"sources":["C:/Users/user/Desktop/MG/Clases/6. Proyecto fin de carrera/Cursor/1. Prueba 2/EDUIA/src/services/auth.service.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\nimport { config } from '../config';\r\n\r\n// Verificar si la configuración de Supabase está completa\r\nif (!config.isSupabaseConfigured) {\r\n    console.error('Error: La configuración de Supabase no está completa.');\r\n    throw new Error('Por favor, configura las variables de entorno de Supabase en el archivo .env');\r\n}\r\n\r\nconst supabase = createClient(config.supabaseUrl, config.supabaseKey);\r\n\r\nexport const authService = {\r\n    async login(email, password) {\r\n        try {\r\n            const { data, error } = await supabase.auth.signInWithPassword({\r\n                email,\r\n                password\r\n            });\r\n            \r\n            if (error) throw error;\r\n            return data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async register(email, password, fullName, role) {\r\n        try {\r\n            const { data, error } = await supabase.auth.signUp({\r\n                email,\r\n                password,\r\n                options: {\r\n                    data: {\r\n                        full_name: fullName,\r\n                        role: role\r\n                    }\r\n                }\r\n            });\r\n            \r\n            if (error) throw error;\r\n            return data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async logout() {\r\n        try {\r\n            const { error } = await supabase.auth.signOut();\r\n            if (error) throw error;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async getCurrentUser() {\r\n        try {\r\n            const { data: { user }, error } = await supabase.auth.getUser();\r\n            if (error) throw error;\r\n            return user;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async resetPassword(email) {\r\n        try {\r\n            const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n                redirectTo: `${window.location.origin}/reset-password`,\r\n            });\r\n            if (error) throw error;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n}; "],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,SAASC,MAAM,QAAQ,WAAW;;AAElC;AACA,IAAI,CAACA,MAAM,CAACC,oBAAoB,EAAE;EAC9BC,OAAO,CAACC,KAAK,CAAC,uDAAuD,CAAC;EACtE,MAAM,IAAIC,KAAK,CAAC,8EAA8E,CAAC;AACnG;AAEA,MAAMC,QAAQ,GAAGN,YAAY,CAACC,MAAM,CAACM,WAAW,EAAEN,MAAM,CAACO,WAAW,CAAC;AAErE,OAAO,MAAMC,WAAW,GAAG;EACvB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACzB,IAAI;MACA,MAAM;QAAEC,IAAI;QAAET;MAAM,CAAC,GAAG,MAAME,QAAQ,CAACQ,IAAI,CAACC,kBAAkB,CAAC;QAC3DJ,KAAK;QACLC;MACJ,CAAC,CAAC;MAEF,IAAIR,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOS,IAAI;IACf,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMY,QAAQA,CAACL,KAAK,EAAEC,QAAQ,EAAEK,QAAQ,EAAEC,IAAI,EAAE;IAC5C,IAAI;MACA,MAAM;QAAEL,IAAI;QAAET;MAAM,CAAC,GAAG,MAAME,QAAQ,CAACQ,IAAI,CAACK,MAAM,CAAC;QAC/CR,KAAK;QACLC,QAAQ;QACRQ,OAAO,EAAE;UACLP,IAAI,EAAE;YACFQ,SAAS,EAAEJ,QAAQ;YACnBC,IAAI,EAAEA;UACV;QACJ;MACJ,CAAC,CAAC;MAEF,IAAId,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOS,IAAI;IACf,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMkB,MAAMA,CAAA,EAAG;IACX,IAAI;MACA,MAAM;QAAElB;MAAM,CAAC,GAAG,MAAME,QAAQ,CAACQ,IAAI,CAACS,OAAO,CAAC,CAAC;MAC/C,IAAInB,KAAK,EAAE,MAAMA,KAAK;IAC1B,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMoB,cAAcA,CAAA,EAAG;IACnB,IAAI;MACA,MAAM;QAAEX,IAAI,EAAE;UAAEY;QAAK,CAAC;QAAErB;MAAM,CAAC,GAAG,MAAME,QAAQ,CAACQ,IAAI,CAACY,OAAO,CAAC,CAAC;MAC/D,IAAItB,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOqB,IAAI;IACf,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMuB,aAAaA,CAAChB,KAAK,EAAE;IACvB,IAAI;MACA,MAAM;QAAEP;MAAM,CAAC,GAAG,MAAME,QAAQ,CAACQ,IAAI,CAACc,qBAAqB,CAACjB,KAAK,EAAE;QAC/DkB,UAAU,EAAE,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;MACzC,CAAC,CAAC;MACF,IAAI5B,KAAK,EAAE,MAAMA,KAAK;IAC1B,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}